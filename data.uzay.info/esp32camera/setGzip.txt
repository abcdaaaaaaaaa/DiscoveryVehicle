Gzip -> 
Compression type
Dynamic Huffman Coding

Filename
index.html.gz

To Hex
Delimiter -> 0x with comma
Bytes per line -> 20

Split
Split delimiter ->0x
Join delimiter -> 0x (with space, like this: 0x)

Link:
https://gchq.github.io/CyberChef/#recipe=Gzip('Dynamic%20Huffman%20Coding','index.html.gz','',false)To_Hex('0x%20with%20comma',20)Split('0x','%200x')&input=PCFkb2N0eXBlIGh0bWw%2BDQo8aHRtbD4NCiAgICA8aGVhZD4NCiAgICAgICAgPG1ldGEgY2hhcnNldD0idXRmLTgiPg0KICAgICAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSI%2BDQogICAgICAgIDxsaW5rIHJlbD0ic2hvcnRjdXQgaWNvbiIgaHJlZj0iaHR0cHM6Ly9kYXRhLnV6YXkuaW5mby9lc3AzMmNhbWVyYS5pY28iPgogICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9kYXRhLnV6YXkuaW5mby9lc3AzMmNhbWVyYS5jc3MiPgogICAgICAgICA8c3R5bGU%2BCiAgICAgICAgICAgIGJvZHkgew0KICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoImh0dHBzOi8vZGF0YS51emF5LmluZm8vaGVsbG8xLnBuZyIpOw0KICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7DQogICAgICAgICAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsNCiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOw0KICAgICAgICAgCQljb2xvcjogI0ZGRkZGRjsNCiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE1cHg7DQogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgICAgICAgICB9CiAgICAgICAgIDwvc3R5bGU%2BCiAgICAgICAgPHRpdGxlPk9WMjY0MCBDYW1lcmE8L3RpdGxlPg0KICAgIDwvaGVhZD4NCiAgICA8Ym9keT4NCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9Im1haW4iPiAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgPGRpdiBpZD0ibG9nbyI%2BDQogICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0ibmF2LXRvZ2dsZS1jYiIgaWQ9Im5hdi10b2dnbGUiPiYjOTc3NjsmbmJzcDsmbmJzcDtDYW1lcmEgU2V0dGluZ3M8L2xhYmVsPg0KICAgICAgICAgICAgPC9kaXY%2BDQogICAgICAgICAgICA8ZGl2IGlkPSJjb250ZW50Ij4NCiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzaWRlYmFyIj4NCiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0ibmF2LXRvZ2dsZS1jYiIgY2hlY2tlZD0iY2hlY2tlZCI%2BDQogICAgICAgICAgICAgICAgICAgIDxuYXYgaWQ9Im1lbnUiPg0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiIGlkPSJmcmFtZXNpemUtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZyYW1lc2l6ZSI%2BUmVzdWxhdGlvbjwvbGFiZWw%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBpZD0iZnJhbWVzaXplIiBjbGFzcz0iZGVmYXVsdC1hY3Rpb24iPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSIxMCI%2BVVhHQSgxNjAweDEyMDApPC9vcHRpb24%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjkiPlNYR0EoMTI4MHgxMDI0KTwvb3B0aW9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSI4Ij5YR0EoMTAyNHg3NjgpPC9vcHRpb24%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjciPlNWR0EoODAweDYwMCk8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iNiI%2BVkdBKDY0MHg0ODApPC9vcHRpb24%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjUiIHNlbGVjdGVkPSJzZWxlY3RlZCI%2BQ0lGKDQwMHgyOTYpPC9vcHRpb24%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IjQiPlFWR0EoMzIweDI0MCk8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMyI%2BSFFWR0EoMjQweDE3Nik8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPG9wdGlvbiB2YWx1ZT0iMCI%2BUVFWR0EoMTYweDEyMCk8L29wdGlvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NlbGVjdD4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cCBoaWRkZW4iIGlkPSJhd2JfZ2Fpbi1ncm91cCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYXdiX2dhaW4iPkFXQiBHYWluPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2l0Y2giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImF3Yl9nYWluIiB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImRlZmF1bHQtYWN0aW9uIiBjaGVja2VkPSJjaGVja2VkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbGlkZXIiIGZvcj0iYXdiX2dhaW4iPjwvbGFiZWw%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY%2BDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGhpZGRlbiIgaWQ9ImFlYy1ncm91cCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYWVjIj5BRUMgU0VOU09SPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2l0Y2giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImFlYyIgdHlwZT0iY2hlY2tib3giIGNsYXNzPSJkZWZhdWx0LWFjdGlvbiIgY2hlY2tlZD0iY2hlY2tlZCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic2xpZGVyIiBmb3I9ImFlYyI%2BPC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGhpZGRlbiIgaWQ9ImFnYy1ncm91cCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iYWdjIj5BR0M8L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN3aXRjaCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0iYWdjIiB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImRlZmF1bHQtYWN0aW9uIiBjaGVja2VkPSJjaGVja2VkIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbGlkZXIiIGZvcj0iYWdjIj48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY%2BICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAiIGlkPSJmYWNlX2RldGVjdC1ncm91cCI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iZmFjZV9kZXRlY3QiPkZhY2UgRGV0ZWN0PC9sYWJlbD4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzd2l0Y2giPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9ImZhY2VfZGV0ZWN0IiB0eXBlPSJjaGVja2JveCIgY2xhc3M9ImRlZmF1bHQtYWN0aW9uIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzbGlkZXIiIGZvcj0iZmFjZV9kZXRlY3QiPjwvbGFiZWw%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY%2BDQogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIiBpZD0iZmFjZV9yZWNvZ25pemUtZ3JvdXAiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9ImZhY2VfcmVjb2duaXplIj5GYWNlIFJlY29nbml6ZTwvbGFiZWw%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3dpdGNoIj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJmYWNlX3JlY29nbml6ZSIgdHlwZT0iY2hlY2tib3giIGNsYXNzPSJkZWZhdWx0LWFjdGlvbiI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ic2xpZGVyIiBmb3I9ImZhY2VfcmVjb2duaXplIj48L2xhYmVsPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY%2BDQogICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBpZD0iYnV0dG9ucyI%2BDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBpZD0iZ2V0LXN0aWxsIj5HZXQgU3RpbGw8L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJ0b2dnbGUtc3RyZWFtIj5TdGFydCBTdHJlYW08L2J1dHRvbj4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJmYWNlX2Vucm9sbCIgY2xhc3M9ImRpc2FibGVkIiBkaXNhYmxlZD0iZGlzYWJsZWQiPlNhdmUgRmFjZTwvYnV0dG9uPg0KICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICAgICAgICAgICAgICA8L25hdj4NCiAgICAgICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICAgICAgICA8ZmlndXJlPg0KICAgICAgICAgICAgICAgICAgICA8ZGl2IGlkPSJzdHJlYW0tY29udGFpbmVyIiBjbGFzcz0iaW1hZ2UtY29udGFpbmVyIGhpZGRlbiI%2BDQogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjbG9zZSIgaWQ9ImNsb3NlLXN0cmVhbSI%2B1zwvZGl2Pg0KICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBpZD0ic3RyZWFtIiBzcmM9IiI%2BDQogICAgICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICAgIDwvZmlndXJlPg0KICAgICAgICAgICAgPC9kaXY%2BDQogICAgICAgIDwvc2VjdGlvbj4NCiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kYXRhLnV6YXkuaW5mby9lc3AzMmNhbWVyYS5qcyI%2BPC9zY3JpcHQ%2BDQogICAgPC9ib2R5Pg0KPC9odG1sPg